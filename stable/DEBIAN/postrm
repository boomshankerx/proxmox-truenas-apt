#!/bin/bash
# Abort if any command returns an error value
set -e

# Debug variable - Values "on" or "off"
_DEBUG="on"

# Setup some variables so we are not duping the paths
FILE_APIDOC="/pve-docs/api-viewer/apidoc.js"
FILE_PVEMANAGER="/pve-manager/js/pvemanagerlib.js"
FILE_TRUENAS="/perl5/PVE/Storage/LunCmd/TrueNAS.pm"
FILE_ZFSPLUGIN="/perl5/PVE/Storage/ZFSPlugin.pm"
GIT_BRANCH="main"
GIT_LOCAL_REPO_PATH="/usr/local/src/"
GIT_REPO_NAME="proxmox-truenas"
GIT_REPO="https://github.com/boomshankerx/"
PATH_CLIENT="/perl5/TrueNAS"
PATH_LIB="/usr/share"
RESTART_PVE_SERVICES="no"

# This script is called as the last step of the installation of the
# package.  All the package's files are in place, dpkg has already
# done its automatic conffile handling, and all the packages we depend
# of are already fully installed and configured.

[ "$_DEBUG" == "on" ] && PATCH_ARGS="--verbose -b --ignore-whitespace" || PATCH_ARGS="-s -b --ignore-whitespace"

# libpve_storage_perl_ver=$(dpkg-query --showformat='${Version}' --show libpve-storage-perl)
# pve_manager_ver=$(dpkg-query --showformat='${Version}' --show pve-manager)
# pve_docs_ver=$(dpkg-query --showformat='${Version}' --show pve-docs)
proxmox_ve_ver=$(dpkg-query --showformat='${Version}' --show proxmox-ve)
major_ver=${proxmox_ve_ver%%.*}

[ "$_DEBUG" == "on" ] && echo "Proxmox Version $proxmox_ve_ver"
[ "$_DEBUG" == "on" ] && echo "Proxmox Major Version $major_ver"

# What is the 'postinst' script doing...
[ "$_DEBUG" == "on" ] && echo "Initiating '$1' with arg $2"
case "$1" in
remove)
  # test if the freenas-proxmox repo has been downloaded
  if [ -d ${GIT_LOCAL_REPO_PATH}${GIT_REPO_NAME} ]; then
    [ "$_DEBUG" == "on" ] && echo "Removing git repo '${GIT_LOCAL_REPO_PATH}${GIT_REPO_NAME}'"
    rm -rf ${GIT_LOCAL_REPO_PATH}${GIT_REPO_NAME}
  fi

  # test if the TrueNAS.pm file is installed and remove it.
  if [ -f ${PATH_LIB}${FILE_TRUENAS} ]; then
    [ "$_DEBUG" == "on" ] && echo "Removing TrueNAS.pm LUN plugin at '${PATH_LIB}${FILE_TRUENAS}'"
    rm -rf ${PATH_LIB}${FILE_TRUENAS}
  fi

  # test if TrueNAS/Client.pm is install and remove it
  if [ -d ${PATH_LIB}${PATH_CLIENT} ]; then
    [ "$_DEBUG" == "on" ] && echo "Removing TrueNAS API Client at '${PATH_CLIENT}'"
    rm -rf ${PATH_LIB}${PATH_CLIENT}
  fi

  echo "Reinstalling original Proxmox VE files"
  [ "$_DEBUG" == "on" ] && echo "Reinstall original ${PATH_LIB}${FILE_ZFSPLUGIN}"
  cp ${PATH_LIB}${FILE_ZFSPLUGIN}.orig ${PATH_LIB}${FILE_ZFSPLUGIN}

  [ "$_DEBUG" == "on" ] && echo "Reinstall original ${PATH_LIB}${FILE_PVEMANAGER}"
  cp ${PATH_LIB}${FILE_PVEMANAGER}.orig ${PATH_LIB}${FILE_PVEMANAGER}

  [ "$_DEBUG" == "on" ] && echo "Reinstall original ${PATH_LIB}${FILE_APIDOC}"
  cp ${PATH_LIB}${FILE_APIDOC}.orig ${PATH_LIB}${FILE_APIDOC}

  echo "Restarting pvedaemon..."
  pvedaemon restart
  echo "Restarting pveproxy..."
  pveproxy restart
  echo "Restarting pvestatd..."
  pvestatd restart
  echo "Restarting pvescheduler..."
  systemctl restart pvescheduler.service
  echo "Restarting HA Services"
  systemctl restart pve-ha-crm.service pve-ha-lrm.service

  exit 0
  ;;

purge)
  exit 0
  ;;

upgrade)
  # test if the TrueNAS.pm file is installed and remove it.
  echo "Reinstalling original Proxmox VE files so upgrade can be performed"
  if [ -f ${PATH_LIB}${FILE_TRUENAS} ]; then
    [ "$_DEBUG" == "on" ] && echo "Removing 'old' TrueNAS.pm LUN plugin at '${PATH_LIB}${FILE_TRUENAS}'"
    rm -rf ${PATH_LIB}${FILE_TRUENAS}
  fi

  [ "$_DEBUG" == "on" ] && echo "Reinstall original ${PATH_LIB}${FILE_ZFSPLUGIN}"
  cp ${PATH_LIB}${FILE_ZFSPLUGIN}.orig ${PATH_LIB}${FILE_ZFSPLUGIN}

  [ "$_DEBUG" == "on" ] && echo "Reinstall original ${PATH_LIB}${FILE_PVEMANAGER}"
  cp ${PATH_LIB}${FILE_PVEMANAGER}.orig ${PATH_LIB}${FILE_PVEMANAGER}

  [ "$_DEBUG" == "on" ] && echo "Reinstall original ${PATH_LIB}${FILE_APIDOC}"
  cp ${PATH_LIB}${FILE_APIDOC}.orig ${PATH_LIB}${FILE_APIDOC}

  exit 0
  ;;

failed-upgrade | disappear | abort-upgrade | abort-remove | abort-deconfigure) ;;

*)
  echo "$0: didn't understand being called with \`$1'" 1>&2
  exit 0
  ;;
esac

exit 0
