#!/bin/bash
# Abort if any command returns an error value
set -e

# Debug variable - Values "on" or "off"
_DEBUG="on"

# Setup some variables so we are not duping the paths
FILE_APIDOC="/pve-docs/api-viewer/apidoc.js"
FILE_PVEMANAGER="/pve-manager/js/pvemanagerlib.js"
FILE_TRUENAS="/perl5/PVE/Storage/LunCmd/TrueNAS.pm"
FILE_ZFSPLUGIN="/perl5/PVE/Storage/ZFSPlugin.pm"
GIT_BRANCH="main"
GIT_REPO_PATH="/usr/local/src/"
GIT_REPO_NAME="proxmox-truenas"
GIT_REPO_URL="https://github.com/boomshankerx/"
PATH_CLIENT="/perl5/TrueNAS"
PATH_LIB="/usr/share"
RESTART_PVE_SERVICES="no"

[ "${_DEBUG}" == "on" ] && PATCH_ARGS="--verbose -b --ignore-whitespace" || PATCH_ARGS="-s -b --ignore-whitespace"

# Get some version numbers of the Proxmox packages
ver_storage=$(dpkg-query --showformat='${Version}' --show libpve-storage-perl)
ver_manager=$(dpkg-query --showformat='${Version}' --show pve-manager)
ver_proxmox=$(dpkg-query --showformat='${Version}' --show proxmox-ve)
ver_major=${ver_proxmox%%.*}

echo "Proxmox Version $ver_proxmox"
echo "Proxmox Major Version $ver_major"
echo "Proxmox Storage Version $ver_storage"
echo "Proxmox Manager Version $ver_manager"

case "$1" in
remove)
  # test if the freenas-proxmox repo has been downloaded
  if [ -d ${GIT_REPO_PATH}${GIT_REPO_NAME} ]; then
    echo "Removing git repo '${GIT_REPO_PATH}${GIT_REPO_NAME}'"
    rm -rf ${GIT_REPO_PATH}${GIT_REPO_NAME}
  fi

  # test if the TrueNAS.pm file is installed and remove it.
  if [ -f ${PATH_LIB}${FILE_TRUENAS} ]; then
    echo "Removing TrueNAS.pm LunCmd plugin at '${PATH_LIB}${FILE_TRUENAS}'"
    rm -rf ${PATH_LIB}${FILE_TRUENAS}
  fi

  # test if TrueNAS/Client.pm is install and remove it
  if [ -d ${PATH_LIB}${PATH_CLIENT} ]; then
    echo "Removing TrueNAS API Client at '${PATH_CLIENT}'"
    rm -rf ${PATH_LIB}${PATH_CLIENT}
  fi

  echo "Reinstalling pve-manager and libpve-storage-perl packages"
  apt install --reinstall libpve-storage-perl pve-manager

  echo "Removing patch backups"
  rm -vf ${PATH_LIB}${FILE_ZFSPLUGIN}.orig
  rm -vf ${PATH_LIB}${FILE_PVEMANAGER}.orig

  # echo "Reinstall original ${PATH_LIB}${FILE_ZFSPLUGIN}"
  # cp ${PATH_LIB}${FILE_ZFSPLUGIN}.orig ${PATH_LIB}${FILE_ZFSPLUGIN}

  # echo "Reinstall original ${PATH_LIB}${FILE_PVEMANAGER}"
  # cp ${PATH_LIB}${FILE_PVEMANAGER}.orig ${PATH_LIB}${FILE_PVEMANAGER}

  echo "Restarting pvedaemon..."
  pvedaemon restart
  echo "Restarting pveproxy..."
  pveproxy restart
  echo "Restarting pvestatd..."
  pvestatd restart
  echo "Restarting pvescheduler..."
  systemctl restart pvescheduler.service
  echo "Restarting HA Services"
  systemctl restart pve-ha-crm.service pve-ha-lrm.service

  exit 0
  ;;

purge)
  exit 0
  ;;

upgrade)
  # test if the TrueNAS.pm file is installed and remove it.
  echo "Reinstalling original Proxmox VE files so upgrade can be performed"
  if [ -f ${PATH_LIB}${FILE_TRUENAS} ]; then
    echo "Removing 'old' TrueNAS.pm LUN plugin at '${PATH_LIB}${FILE_TRUENAS}'"
    rm -rf ${PATH_LIB}${FILE_TRUENAS}
  fi

  echo "Reinstalling pve-manager and libpve-storage-perl packages"
  apt install --reinstall libpve-storage-perl pve-manager

  echo "Removing patch backups"
  rm -vf ${PATH_LIB}${FILE_ZFSPLUGIN}.orig
  rm -vf ${PATH_LIB}${FILE_PVEMANAGER}.orig

  # echo "Reinstall original ${PATH_LIB}${FILE_ZFSPLUGIN}"
  # cp ${PATH_LIB}${FILE_ZFSPLUGIN}.orig ${PATH_LIB}${FILE_ZFSPLUGIN}

  # echo "Reinstall original ${PATH_LIB}${FILE_PVEMANAGER}"
  # cp ${PATH_LIB}${FILE_PVEMANAGER}.orig ${PATH_LIB}${FILE_PVEMANAGER}

  exit 0
  ;;

failed-upgrade | disappear | abort-upgrade | abort-remove | abort-deconfigure) ;;

*)
  echo "$0: didn't understand being called with \`$1'" 1>&2
  exit 0
  ;;
esac

exit 0
