name: Build .deb package

on:
  repository_dispatch:
    types: [main-push]
  workflow_dispatch: {}

env:
  GITHUB_TAG: 'latest'
  TARGET_NAME: 'proxmox-truenas'
  TARGET_REPO: 'boomshankerx/proxmox-truenas'
  APT_REPO_NAME: 'proxmox-truenas-apt'
  APT_REPO_URL: 'https://boomshankerx.github.io/proxmox-truenas-apt/'
  APT_REPO: 'boomshankerx/proxmox-truenas-apt'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout packaging repo (this repo)
        uses: actions/checkout@v4

      - name: Checkout source repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.TARGET_REPO }}
          token: ${{ secrets.RELEASE_TOKEN }}
          path: source
          fetch-depth: 0

      - name: Install dpkg
        run: sudo apt-get update && sudo apt-get install -y dpkg

      - name: Compute full version from source repo
        id: version
        run: |
          cd source
          BASE_VERSION=$(cat VERSION)
          COMMIT_COUNT=$(git rev-list --count HEAD)
          FULL_VERSION="${BASE_VERSION}.${COMMIT_COUNT}"
          echo "FULL_VERSION=$FULL_VERSION" >> $GITHUB_ENV
          echo "Computed version: $FULL_VERSION"
          cd ..

      - name: Fix script permissions
        run: |
          chmod 0755 stable/DEBIAN/postinst || true
          chmod 0755 stable/DEBIAN/postrm || true

      - name: Update DEBIAN/control with version
        run: |
          sed -i "s/^Version:.*/Version: ${FULL_VERSION}/" stable/DEBIAN/control

      - name: Build .deb package
        run: |
          mkdir -p dist
          dpkg-deb -Zgzip --build stable dist/${TARGET_NAME}_${FULL_VERSION}_all.deb

      - name: Move 'latest' tag in proxmox-truenas repo
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          git clone https://x-access-token:${GH_TOKEN}@github.com/${TARGET_REPO}.git
          cd ${TARGET_NAME}
          git fetch origin main
          git tag -f ${GITHUB_TAG} origin/main
          git push -f origin ${GITHUB_TAG}

      - name: Delete existing release for 'latest' (if any)
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          gh release delete ${GITHUB_TAG} \
            --repo ${TARGET_REPO} \
            --yes

      - name: Recreate 'latest' release
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          gh release create ${GITHUB_TAG} \
            --repo ${TARGET_REPO} \
            --title "Latest Release: ${FULL_VERSION}" \
            --notes "Auto-updated from main at version ${FULL_VERSION}" \

      - name: Upload .deb to release
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          gh release upload ${GITHUB_TAG} \
            dist/${TARGET_NAME}_${FULL_VERSION}_all.deb \
            --repo ${TARGET_REPO} \
            --clobber
  apt_repo:
    name: Build & Publish APT repo (bookworm + trixie)
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write

    env:
      REPO_NAME: proxmox-truenas
      COMPONENTS: main
      ARCHES: "all"                          # add "amd64 arm64" if you ship arch builds later
      REPO_URL: https://boomshankerx.github.io/truenas-proxmox-apt/

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Pages
        uses: actions/configure-pages@v4

      - name: Download .deb from latest release
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          mkdir -p artifacts
          gh release download latest \
            --repo ${{ env.TARGET_REPO }} \
            --pattern "*.deb" \
            --dir artifacts
          ls -l artifacts

      - name: Build (bookworm)
        id: bookworm
        uses: morph027/apt-repo-action@v3
        with:
          repo-name: ${{ env.REPO_NAME }}
          scan-dir: artifacts
          codename: bookworm
          components: ${{ env.COMPONENTS }}
          architectures: ${{ env.ARCHES }}
          signing-key: ${{ secrets.SIGNING_KEY }}      # ASCII-armored private key
          import-from-repo-url: |
            deb-all ${{ env.REPO_URL }} bookworm ${{ env.COMPONENTS }}

      - name: Build (trixie)
        id: trixie
        uses: morph027/apt-repo-action@v3
        with:
          repo-name: ${{ env.REPO_NAME }}
          scan-dir: artifacts
          codename: trixie
          components: ${{ env.COMPONENTS }}
          architectures: ${{ env.ARCHES }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          import-from-repo-url: |
            deb-all ${{ env.REPO_URL }} trixie ${{ env.COMPONENTS }}

      - name: Merge to single site/
        run: |
          set -euo pipefail
          mkdir -p site
          rsync -a "${{ steps.bookworm.outputs.dir }}/" site/
          rsync -a "${{ steps.trixie.outputs.dir }}/"  site/
          touch site/.nojekyll
          # Export public key for clients (optional if the action already emitted one)
          gpg --armor --export $(gpg --list-keys --with-colons | awk -F: '/^pub:/ {print $5; exit}') > site/gpg.key || true

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
